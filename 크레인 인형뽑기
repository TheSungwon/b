import java.util.Stack;
class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        
        Stack<Integer> stack = new Stack<>();
        stack.push(0);
        
        for(int move : moves){
            for(int j=0; j<board.length; j++){
                if(board[j][move-1] != 0){
                    if(stack.peek() == board[j][move-1]){
                        stack.pop();
                        answer += 2;
                    }else{
                        stack.push(board[j][move-1]);
                    }
                    board[j][move-1] = 0;
                    break;
                }
            }
        }
        return answer;
    }
}


바구니역할 stack

push(0) - 스택의 맨 윗 값과 비교 할 때 오류 안 나게 없으면 오류

for(크레인moves길이 만큼)

   for( 배열board길이 만큼 (해당 라인 뽑기))

        if(board[j][move-1] 0이 아니면

            if(stack의 윗 값 과 board[j][move-1] 값이 == 이면

                    statck.pop(); //삭제

                    answer +=2; //하고 2더하기

        else

                값이 다르면 stack.push(board[j][move-1]);

                break;

        return answer;
